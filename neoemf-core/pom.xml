<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fr.inria.atlanmod.neoemf</groupId>
        <artifactId>neoemf</artifactId>
        <version>2.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>neoemf-core</artifactId>

    <packaging>jar</packaging>

    <name>NeoEMF Core</name>
    <description>
        NeoEMF core component.
        Specialize the standard EMF classes and provide abstract classes for dedicated back-end extensions.
    </description>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <chronicle-map.version>3.17.1</chronicle-map.version>
        <chronicle-bytes.version>2.17.19</chronicle-bytes.version>

        <log4j.version>2.11.2</log4j.version>

        <cglib.version>3.2.10</cglib.version>
    </properties>

    <dependencies>

        <!-- Commons -->

        <dependency>
            <groupId>org.atlanmod.commons</groupId>
            <artifactId>commons-core</artifactId>
        </dependency>

        <!-- Database -->

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-map</artifactId>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-bytes</artifactId>
        </dependency>

        <!-- Reflection -->

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
        </dependency>

        <!-- Logging -->

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>

        <!-- EMF -->

        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>org.eclipse.emf.common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.emf</groupId>
            <artifactId>org.eclipse.emf.ecore</artifactId>
        </dependency>


    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- Database -->

            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>chronicle-map</artifactId>
                <version>${chronicle-map.version}</version>
                <exclusions>
                    <exclusion> <!-- Should be optional -->
                        <groupId>com.intellij</groupId>
                        <artifactId>annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.thoughtworks.xstream</groupId>
                        <artifactId>xstream</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jettison</groupId>
                        <artifactId>jettison</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.ops4j.pax.url</groupId>
                        <artifactId>pax-url-aether</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>chronicle-bytes</artifactId>
                <version>${chronicle-bytes.version}</version>
                <exclusions>
                    <exclusion> <!-- Should be optional -->
                        <groupId>com.intellij</groupId>
                        <artifactId>annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Reflection -->

            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <!-- Logging -->

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency> <!-- Bridge for Java Logging -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency> <!-- Bridge for SLF4J -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency> <!-- Bridge for Apache Commons Logging -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency> <!-- Bridge for Log4j v1.X -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
    </build>

</project>
